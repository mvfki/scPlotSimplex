// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// euclidean_dense
arma::mat euclidean_dense(arma::mat& query, arma::mat& target);
RcppExport SEXP _scPlotSimplex_euclidean_dense(SEXP querySEXP, SEXP targetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type query(querySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type target(targetSEXP);
    rcpp_result_gen = Rcpp::wrap(euclidean_dense(query, target));
    return rcpp_result_gen;
END_RCPP
}
// euclidean_sparse
arma::mat euclidean_sparse(arma::sp_mat query, arma::sp_mat target);
RcppExport SEXP _scPlotSimplex_euclidean_sparse(SEXP querySEXP, SEXP targetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type query(querySEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type target(targetSEXP);
    rcpp_result_gen = Rcpp::wrap(euclidean_sparse(query, target));
    return rcpp_result_gen;
END_RCPP
}
// cosine_dense
arma::mat cosine_dense(arma::mat query, arma::mat target);
RcppExport SEXP _scPlotSimplex_cosine_dense(SEXP querySEXP, SEXP targetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type query(querySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type target(targetSEXP);
    rcpp_result_gen = Rcpp::wrap(cosine_dense(query, target));
    return rcpp_result_gen;
END_RCPP
}
// cosine_sparse
arma::mat cosine_sparse(arma::sp_mat query, arma::sp_mat target);
RcppExport SEXP _scPlotSimplex_cosine_sparse(SEXP querySEXP, SEXP targetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type query(querySEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type target(targetSEXP);
    rcpp_result_gen = Rcpp::wrap(cosine_sparse(query, target));
    return rcpp_result_gen;
END_RCPP
}
// rowMeans_sparse
NumericVector rowMeans_sparse(arma::sp_mat x);
RcppExport SEXP _scPlotSimplex_rowMeans_sparse(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rowMeans_sparse(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_scPlotSimplex_euclidean_dense", (DL_FUNC) &_scPlotSimplex_euclidean_dense, 2},
    {"_scPlotSimplex_euclidean_sparse", (DL_FUNC) &_scPlotSimplex_euclidean_sparse, 2},
    {"_scPlotSimplex_cosine_dense", (DL_FUNC) &_scPlotSimplex_cosine_dense, 2},
    {"_scPlotSimplex_cosine_sparse", (DL_FUNC) &_scPlotSimplex_cosine_sparse, 2},
    {"_scPlotSimplex_rowMeans_sparse", (DL_FUNC) &_scPlotSimplex_rowMeans_sparse, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_scPlotSimplex(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
