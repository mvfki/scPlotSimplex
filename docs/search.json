[{"path":"/articles/CytoSimplex.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Simplex Visualization of Cell Fate Similarity in Single-Cell Data","text":"package use simplex barycentric coordinate approach assist exploration similarity single cells selected cell clusters. denote number (2-4) selected clusters, groups clusters, vertices. calculate similarity single cell average point vertex. normalizing similarity single cell specified vertices unit sum, can derive barycentric coordinate single cell. Visualization method binary (2-ended line), ternary (equilateral triangle) quaternary (tetrahedron) simplex developed. main plotting functions plotBinary(), plotTernary() plotQuaternary(), respectively. Please see full argument documentation ?plotBinary, ?plotTernary ?plotQuaternary. , show examples creating ternary quaternary plots, useful.","code":""},{"path":"/articles/CytoSimplex.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example Data","title":"Simplex Visualization of Cell Fate Similarity in Single-Cell Data","text":"vignette, use data Matsushita Liu, Nat. Comm. 2023. application method originally used publicaiton well. processed annotated scRNA-seq data, took subset 50 cells per major cell type raw count matrix cell type annotation. embedded within package.","code":"library(CytoSimplex) data(\"rnaRaw\") print(paste0(\"Class of `rnaRaw`: \", class(rnaRaw), \", dimension of `rnaRaw`: \", nrow(rnaRaw), \" genes x \", ncol(rnaRaw), \" cells\")) ## [1] \"Class of `rnaRaw`: dgCMatrix, dimension of `rnaRaw`: 20243 genes x 250 cells\" data(\"rnaCluster\") print(table(rnaCluster)) ## rnaCluster ##   CH  ORT   OS   RE Stem  ##   50   50   50   50   50"},{"path":"/articles/CytoSimplex.html","id":"select-top-features-optional-but-recommended","dir":"Articles","previous_headings":"","what":"Select top features (optional but recommended)","title":"Simplex Visualization of Cell Fate Similarity in Single-Cell Data","text":"Technically, forms feature--observation matrix acceptable method developed, users encouraged explore usability method types data, even biological. However, single-cell transcriptomics data, provided, usually high dimensionality contains technical biological noise. testing different approaches reducing dimensionality noise, recommend users select number top differentially expressed genes (DEGs) cluster vertex represents. implemented fast Wilcoxon rank-sum test method can invoked function selectTopFeatures(). , choose top DEGs Osteoblast cells (\"OS\"), Reticular cells (\"RE\") Chondrocytes (\"CH\"), also shown previously mentioned publication. number top DEGs cluster set 30 (nTop = 30), thus 90 unique genes expected returned. Alternatively, users can set returnStats = TRUE obtain table full Wilcoxon rank-sum test statistics, including result clusters instead selected vertices.","code":"vertices <- c(\"OS\", \"RE\", \"CH\") geneSelect <- selectTopFeatures(rnaRaw, clusterVar = rnaCluster,                                  vertices = vertices, nTop = 30) head(geneSelect) ## [1] \"Nrk\"     \"Eps8l2\"  \"Mfi2\"    \"Scin\"    \"Fam101a\" \"Sox5\" stats <- selectTopFeatures(rnaRaw, clusterVar = rnaCluster,                             vertices = vertices, nTop = 30, returnStats = TRUE) head(stats) ##   feature group    avgExpr     logFC statistic     auc         pval ## 1     Rp1    CH  0.0000000 0.0000000    5000.0 0.50000 1.000000e+00 ## 2   Sox17    CH  0.0000000 0.0000000    5000.0 0.50000 1.000000e+00 ## 3  Mrpl15    CH  8.4139185 5.7710321    6948.0 0.69480 7.500435e-08 ## 4  Lypla1    CH  4.6278876 2.5075283    5894.0 0.58940 4.817036e-03 ## 5 Gm37988    CH  0.2568508 0.2568508    5100.0 0.51000 4.659094e-02 ## 6   Tcea1    CH 11.7897501 6.0049962    6559.5 0.65595 2.617836e-04 ##           padj pct_in pct_out ## 1 1.000000e+00      0     0.0 ## 2 1.000000e+00      0     0.0 ## 3 8.806920e-07     64    19.0 ## 4 1.447829e-02     36    15.5 ## 5 9.943493e-02      2     0.0 ## 6 1.143319e-03     86    40.5"},{"path":"/articles/CytoSimplex.html","id":"generating-ternary-plots","dir":"Articles","previous_headings":"","what":"Generating ternary plots","title":"Simplex Visualization of Cell Fate Similarity in Single-Cell Data","text":"plotTernary() shows sample similarity ternary simplex – equilateral triangle. closer dot, cell, one vertex, similar cell cell cluster(s) vertex represents. recommend users select top marker genes terminal use features calculating similarity.","code":"vt.tern <- c(\"OS\", \"RE\", \"CH\") gene.tern <- selectTopFeatures(rnaRaw, clusterVar = rnaCluster, vertices = vt.tern) plotTernary(rnaRaw, clusterVar = rnaCluster, vertices = vt.tern, features = gene.tern)"},{"path":"/articles/CytoSimplex.html","id":"adding-velocity-information-to-ternary-plot","dir":"Articles","previous_headings":"","what":"Adding velocity information to ternary plot","title":"Simplex Visualization of Cell Fate Similarity in Single-Cell Data","text":"RNA velocity quantitative measurement cellular transitions single-cell transcriptomics experiments reveals transient cellular dynamics among heterogeneous cell population (Qiao, PNAS 2021). implemented velocity visualization strategy applied ternary quaternary simplex plot. velocity information input format must N x N graph (sparse matrix, N denotes number cells). included graph matches cells example dataset package. graph subset output Python module veloVAE, part processed data publication mentioned start. create number square grids 2D plain ternary simplex (cube grids 3D space quaternary simplex), aggregate cells fall grid taking mean velocity towards vertices. Finally, draw arrow grid center pointing vertex length representing aggregated mean velocity.  previous two functions mainly depends ggplot2, widely used create figures R. binary simplex plotted normally ggplot 2D coordinates, ternary simplex, barycentric coordinate drawn 2D segments cartesian coordinate, instead implementing ternary barycentric coordinate system. Users wishing add customized alteration pay attention .","code":"data(\"rnaVelo\") print(paste0(\"Class of `rnaVelo`: \", class(rnaVelo),               \", dimension of `rnaVelo`: \", nrow(rnaVelo), \" x \", ncol(rnaVelo))) ## [1] \"Class of `rnaVelo`: dgCMatrix, dimension of `rnaVelo`: 250 x 250\" plotTernary(rnaRaw, clusterVar = rnaCluster, vertices = vt.tern,              features = gene.tern, veloGraph = rnaVelo)"},{"path":"/articles/CytoSimplex.html","id":"exploration-with-each-cluster","dir":"Articles","previous_headings":"","what":"Exploration with each cluster","title":"Simplex Visualization of Cell Fate Similarity in Single-Cell Data","text":"argument splitCluster supported three plotting functions. setting splitCluster = TRUE, list plots returned, one containing cells, sub-plots containing dots (cells) belonging one cluster annotation specified.  can seen subplots, osteoblast-chondrocyte transitional (OCT) stem cells (\"Stem\") sit closer osteoblast vertex tend extremely close vertex observed “OS” “RE” clusters; reticular cells (\"RE\") osteoblast cells (\"OS\") gathered towards corresponding vertices; osteoblast-reticular transitional cells (\"ORT\") distribute across vertices two cell types. patterns match conclusion publication. Similarly, velocity layer can also splitted.  shown subplots, OCT stem cells transitional potential towards three terminal cell types; reticular osteablast cells differentiating towards corresponding cell types; ORT cells transition potential towards osteoblast reticular cell types.","code":"library(patchwork) ternList <- plotTernary(rnaRaw, clusterVar = rnaCluster, vertices = vt.tern,                          features = gene.tern,                          byCluster = c(\"Stem\", \"RE\", \"ORT\", \"OS\")) print(names(ternList)) ## [1] \"Stem\" \"RE\"   \"ORT\"  \"OS\" (ternList$Stem + ternList$RE) / (ternList$ORT + ternList$OS) veloSplit <- plotTernary(rnaRaw, clusterVar = rnaCluster, vertices = vt.tern,                           features = gene.tern, veloGraph = rnaVelo,                           byCluster = c(\"Stem\", \"RE\", \"ORT\", \"OS\")) (veloSplit$Stem + veloSplit$RE) / (veloSplit$ORT + veloSplit$OS)"},{"path":"/articles/CytoSimplex.html","id":"create-quaternary-simplex-plot","dir":"Articles","previous_headings":"","what":"Create quaternary simplex plot","title":"Simplex Visualization of Cell Fate Similarity in Single-Cell Data","text":"plotQuaternary() shows sample similarity quaternary simplex – tetrahedron. 3D visualization depends package plot3D creating static figure, rgl creating interactive 3D display. (Linux users may refer rgl documentation installation guide) quaternary simplex, need one cluster vertex. , add cells annotated osteoblast-reticular transition cells (\"ORT\") vertex list. also add velocity information example, shown default. show interactive 3D display, users can simply add argument interactive = TRUE. ↑↑↑Try drag ! also implemented GIF image generator rotates tetrahedron rounding z-axis. Note package magick required feature. (See install magick detail)","code":"vt.quat <- c(\"OS\", \"RE\", \"CH\", \"ORT\") gene.quat <- selectTopFeatures(rnaRaw, clusterVar = rnaCluster, vertices = vt.quat) plotQuaternary(rnaRaw, clusterVar = rnaCluster, vertices = vt.quat,                 features = gene.quat, veloGraph = rnaVelo) plotQuaternary(rnaRaw, clusterVar = rnaCluster, vertices = vt.quat,                 features = gene.quat, veloGraph = rnaVelo, interactive = TRUE) writeQuaternaryGIF(rnaRaw, clusterVar = rnaCluster, vertices = vt.quat,                     features = gene.quat, veloGraph = rnaVelo,                     gifPath = \"rotating_tetra.gif\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yichen Wang. Author, maintainer. Jialin Liu. Author. Joshua Welch. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang Y, Liu J (2023). CytoSimplex: Simplex Visualization Cell Fate Similarity Single-Cell Data. R package version 0.1.0, https://github.com/welch-lab/CytoSimplex, https://welch-lab.github.io/CytoSimplex/.","code":"@Manual{,   title = {CytoSimplex: Simplex Visualization of Cell Fate Similarity in Single-Cell Data},   author = {Yichen Wang and Jialin Liu},   year = {2023},   note = {R package version 0.1.0, https://github.com/welch-lab/CytoSimplex},   url = {https://welch-lab.github.io/CytoSimplex/}, }"},{"path":"/index.html","id":"cytosimplex-","dir":"","previous_headings":"","what":"Simplex Visualization of Cell Fate Similarity in Single-Cell Data","title":"Simplex Visualization of Cell Fate Similarity in Single-Cell Data","text":"CytoSimplex R package creates simplex plot showing similarity single-cells terminals represented clusters cells. RNA velocity can added another layer information. Python users, Python package CytoSimplex provides functionalities.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simplex Visualization of Cell Fate Similarity in Single-Cell Data","text":"package developed tested R>=4.2.0. Users can install R following instruction provided CRAN. RStudio recommended IDE working R projects. install CytoSimplex R, run following command R console: latest developmental version, run following command R console:","code":"install.packages(\"CytoSimplex\") if (!requireNamespace(\"devtools\", quietly = TRUE))     install.packages(\"devtools\") devtools::install_github(\"welch-lab/CytoSimplex\")"},{"path":"/index.html","id":"tutorial","dir":"","previous_headings":"","what":"Tutorial","title":"Simplex Visualization of Cell Fate Similarity in Single-Cell Data","text":"created documentation website posting example tutorials walking process loading provided example data creating different types visualization.","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Simplex Visualization of Cell Fate Similarity in Single-Cell Data","text":"used CytoSimplex work, please cite following work: Jialin Liu, Yichen Wang, Chen Li, Yichen Gu, Noriaki Ono Joshua D. Welch, CytoSimplex: Visualizing Single-cell Fates Transitions Simplex, 2023, bioRxiv","code":""},{"path":"/reference/colNormalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize each column of the input matrix by the column sum — colNormalize","title":"Normalize each column of the input matrix by the column sum — colNormalize","text":"Normalize column input matrix column sum","code":""},{"path":"/reference/colNormalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize each column of the input matrix by the column sum — colNormalize","text":"","code":"colNormalize(x, scaleFactor = NULL, log = FALSE, ...)  # S3 method for default colNormalize(x, scaleFactor = NULL, log = FALSE, ...)  # S3 method for dgCMatrix colNormalize(x, scaleFactor = NULL, log = FALSE, ...)  # S3 method for Seurat colNormalize(   x,   scaleFactor = NULL,   log = FALSE,   assay = NULL,   layer = \"counts\",   ... )  # S3 method for SingleCellExperiment colNormalize(x, scaleFactor = NULL, log = FALSE, assay.type = \"counts\", ...)"},{"path":"/reference/colNormalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize each column of the input matrix by the column sum — colNormalize","text":"x Feature observation matrix. Alternatively, Seurat object SingleCellExperiment object raw counts available also supported. scaleFactor Multiplier normalized data. Default NULL. log Logical. Whether take log1p transformation scaling. Default FALSE ... Additional arguments passed methods assay \"Seurat\" method, specific assay get data . Default NULL default assay. layer \"Seurat\" method, layer assay used. Default \"counts\". assay.type \"SingleCellExperiment\" method, assay type get data . Default \"counts\".","code":""},{"path":"/reference/colNormalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize each column of the input matrix by the column sum — colNormalize","text":"Normalized matrix size Seurat object normalized data specified slot specified assay. SingleCellExperiment object normalized data specified assay. \"normcounts\" log = FALSE \"logcounts\" log = TRUE.","code":""},{"path":"/reference/colNormalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize each column of the input matrix by the column sum — colNormalize","text":"","code":"rnaNorm <- colNormalize(rnaRaw) # \\donttest{ # Seurat example library(Seurat) #> Loading required package: SeuratObject #> Loading required package: sp #> ‘SeuratObject’ was built under R 4.3.1 but the current version is #> 4.3.2; it is recomended that you reinstall ‘SeuratObject’ as the ABI #> for R may have changed #>  #> Attaching package: ‘SeuratObject’ #> The following object is masked from ‘package:base’: #>  #>     intersect srt <- CreateSeuratObject(rnaRaw) #> Warning: Feature names cannot have underscores ('_'), replacing with dashes ('-') srt <- colNormalize(srt) # } # \\donttest{ # SingleCellExperiment example library(SingleCellExperiment) #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following object is masked from ‘package:SeuratObject’: #>  #>     intersect #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #>  #> Attaching package: ‘IRanges’ #> The following object is masked from ‘package:sp’: #>  #>     %over% #> Loading required package: GenomeInfoDb #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians #>  #> Attaching package: ‘SummarizedExperiment’ #> The following object is masked from ‘package:Seurat’: #>  #>     Assays #> The following object is masked from ‘package:SeuratObject’: #>  #>     Assays sce <- SingleCellExperiment(assays = list(counts = rnaRaw)) sce <- colNormalize(sce) # }"},{"path":"/reference/plotBinary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create binary plots — plotBinary","title":"Create binary plots — plotBinary","text":"Create binary plots show similarity single cells two selected terminals barycentric coordinate. two vertices placed left right 2D plot x-axis measures similarity. Y-axis jittered clear view. density (histogram) curve added indicating distribution. See plotTernary manual details.","code":""},{"path":"/reference/plotBinary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create binary plots — plotBinary","text":"","code":"plotBinary(x, ...)  # S3 method for default plotBinary(   x,   clusterVar,   vertices,   features = NULL,   byCluster = NULL,   processed = FALSE,   method = c(\"euclidean\", \"cosine\", \"pearson\", \"spearman\"),   force = FALSE,   sigma = 0.08,   scale = TRUE,   dotColor = \"grey60\",   returnData = FALSE,   ... )  # S3 method for Seurat plotBinary(   x,   layer = \"counts\",   assay = NULL,   clusterVar = NULL,   processed = FALSE,   ... )  # S3 method for SingleCellExperiment plotBinary(x, assay.type = \"counts\", clusterVar = NULL, processed = FALSE, ...)  # S3 method for simMat plotBinary(   x,   dotSize = 0.6,   dotColor = \"grey60\",   densLinewidth = 0.8,   labelColors = c(\"#3B4992FF\", \"#EE0000FF\"),   title = NULL,   ... )"},{"path":"/reference/plotBinary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create binary plots — plotBinary","text":"x Input data. Can matrix dgCMatrix object cells columns, Seurat SingleCellExperiment object. \"simMat\" method takes intermediate values. ... Arguments passed methods. clusterVar vector/factor assigning cluster variable column matrix object. \"Seurat\" method, NULL (default) Idents(x), variable name meta.data slot. \"SingleCellExperiment\" method, NULL (default) colLabels(x), variable name colData slot. vertices Vector three unique cluster names used plotting. named list groups clusters three terminal vertices. must overlap groups. features Valid matrix row subsetting index select features similarity calculation. Default NULL uses available features. byCluster Default NULL generate one plot cells. Set \"\" split cells plot cluster returns list subplots cluster well plot including cells. Otherwise, vector cluster names generate list subplots specified clusters. processed Logical. Whether input matrix already processed. TRUE bypass internal preprocessing input matrix directly used similarity calculation. Default FALSE raw count input recommended. missing call, using slot = \"counts\" \"Seurat\" method using assay.type = \"counts\" \"SingleCellExperiment\" method force argument FALSE others TRUE. method Similarity calculation method. Default \"euclidean\". Choose \"euclidean\", \"cosine\", \"pearson\", \"spearman\". force Whether force calculate similarity 500 features detected, generally recommended. Default FALSE. sigma Gaussian kernel parameter controls effect variance. effective using distance metric (.e. method \"euclidian\" \"cosine\"). Larger value tighten dot spreading figure. Default 0.08. scale Whether min-max scale distance matrix clusters. Default TRUE. returnData Logical. Whether return similarity data instead generating plot. Default FALSE. layer \"Seurat\" method, layer assay used. Default \"counts\". assay \"Seurat\" method, specific assay get data . Default NULL default assay. assay.type \"SingleCellExperiment\" methods. assay use calculating similarity. Default \"counts\". dotSize, dotColor Dot aesthetics passed geom_point. Default 0.6 \"grey60\". densLinewidth Density plot line aesthetic. Default 0.8. labelColors Color axis lines vertex labels. Default c(\"#3B4992FF\", \"#EE0000FF\") (blue red). title Title text plot. Default NULL.","code":""},{"path":"/reference/plotBinary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create binary plots — plotBinary","text":"'simMat' method, ggplot object. methods, ggplot object splitCluster = FALSE, list ggplot objects splitCluster = TRUE.","code":""},{"path":"/reference/plotBinary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create binary plots — plotBinary","text":"","code":"gene <- selectTopFeatures(rnaRaw, rnaCluster, c(\"RE\", \"OS\")) #> Selected 30 features for \"OS\". #> Selected 30 features for \"RE\". plotBinary(rnaRaw, rnaCluster, c(\"RE\", \"OS\"), gene)  # \\donttest{ # Seurat example library(Seurat) srt <- CreateSeuratObject(rnaRaw) #> Warning: Feature names cannot have underscores ('_'), replacing with dashes ('-') Idents(srt) <- rnaCluster gene <- selectTopFeatures(srt, vertices = c(\"OS\", \"RE\")) #> Selected 30 features for \"OS\". #> Selected 30 features for \"RE\". plotBinary(srt, features = gene, vertices = c(\"OS\", \"RE\"))  # } # \\donttest{ # SingleCellExperiment example library(SingleCellExperiment) sce <- SingleCellExperiment(assays = list(counts = rnaRaw)) colLabels(sce) <- rnaCluster gene <- selectTopFeatures(sce, vertices = c(\"OS\", \"RE\")) #> Selected 30 features for \"OS\". #> Selected 30 features for \"RE\". plotBinary(sce, features = gene, vertices = c(\"OS\", \"RE\"))  # }"},{"path":"/reference/plotQuaternary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create quaternary simplex plots — plotQuaternary","title":"Create quaternary simplex plots — plotQuaternary","text":"Create quaternary plots show similarity single cells selected four terminals baricentric coordinate. See plotTernary details methodologies. dynamic rotating view GIF image file can created writeQuaternaryGIF. Package magick must installed advance. Linux users may refer installation guide.","code":""},{"path":"/reference/plotQuaternary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create quaternary simplex plots — plotQuaternary","text":"","code":"plotQuaternary(x, ...)  # S3 method for default plotQuaternary(   x,   clusterVar,   vertices,   features = NULL,   veloGraph = NULL,   byCluster = NULL,   processed = FALSE,   method = c(\"euclidean\", \"cosine\", \"pearson\", \"spearman\"),   force = FALSE,   sigma = 0.05,   scale = TRUE,   dotColor = \"grey60\",   returnData = FALSE,   ... )  # S3 method for Seurat plotQuaternary(   x,   layer = \"counts\",   assay = NULL,   clusterVar = NULL,   processed = FALSE,   ... )  # S3 method for SingleCellExperiment plotQuaternary(   x,   assay.type = \"counts\",   clusterVar = NULL,   processed = FALSE,   ... )  # S3 method for simMat plotQuaternary(   x,   veloMat = NULL,   nGrid = 10,   radius = 0.2,   dotSize = 0.6,   dotColor = \"grey60\",   labelColors = c(\"#3B4992FF\", \"#EE0000FF\", \"#008B45FF\", \"#631879FF\"),   arrowLinewidth = 0.6,   arrowAngle = 20,   arrowLen = 0.1,   vertexLabelSize = 1,   edgeLinewidth = 1,   title = NULL,   titleSize = 1,   titleColor = \"black\",   theta = 20,   phi = 0,   interactive = FALSE,   ... )"},{"path":"/reference/plotQuaternary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create quaternary simplex plots — plotQuaternary","text":"x Input data. Can matrix dgCMatrix object cells columns, Seurat SingleCellExperiment object. \"simMat\" method takes intermediate values. ... Arguments passed methods. clusterVar vector/factor assigning cluster variable column matrix object. \"Seurat\" method, NULL (default) Idents(x), variable name meta.data slot. \"SingleCellExperiment\" method, NULL (default) colLabels(x), variable name colData slot. vertices Vector three unique cluster names used plotting. named list groups clusters three terminal vertices. must overlap groups. features Valid matrix row subsetting index select features similarity calculation. Default NULL uses available features. veloGraph Cell x cell dgCMatrix object containing velocity information. Shows velocity grid-arrow layer specified. Default NULL show velocity. byCluster Default NULL generate one plot cells. Set \"\" split cells plot cluster returns list subplots cluster well plot including cells. Otherwise, vector cluster names generate list subplots specified clusters. processed Logical. Whether input matrix already processed. TRUE bypass internal preprocessing input matrix directly used similarity calculation. Default FALSE raw count input recommended. missing call, using slot = \"counts\" \"Seurat\" method using assay.type = \"counts\" \"SingleCellExperiment\" method force argument FALSE others TRUE. method Similarity calculation method. Default \"euclidean\". Choose \"euclidean\", \"cosine\", \"pearson\", \"spearman\". force Whether force calculate similarity 500 features detected, generally recommended. Default FALSE. sigma Gaussian kernel parameter controls effect variance. effective using distance metric (.e. method \"euclidian\" \"cosine\"). Larger values tighten dot spreading figure. Default 0.05. scale Whether min-max scale distance matrix clusters. Default TRUE. returnData Logical. Whether return similarity aggregated velocity data applicable instead generating plot. Default FALSE. layer \"Seurat\" method, layer assay used. Default \"counts\". assay \"Seurat\" method, specific assay get data . Default NULL default assay. assay.type \"SingleCellExperiment\" methods. assay use calculating similarity. Default \"counts\". veloMat Aggregated velocity matrix. Output aggrVeloGraph. nGrid Number grids along x-axis tetrahedron triangle. Default 10. radius Arrow length unit velocity. Lower arrows point outside tetrahedron. Default 0.2. dotSize, dotColor Dot aesthetics. Default 0.6 \"grey60\". labelColors Colors vertex labels. Default c(\"#3B4992FF\", \"#EE0000FF\", \"#008B45FF\", \"#631879FF\") (blue, red, green purple). arrowLinewidth Arrow aesthetics. Default 0.6. arrowAngle, arrowLen Arrow aesthetics passed grid::arrow. length arrow internally converted unit onject inches. Default 20 0.1. vertexLabelSize Numeric, size vertex text label relative default size. Default 1. edgeLinewidth Controls linewidth edges tetrahedron. Default 1. title Title text plot. Default NULL. titleSize, titleColor Setting main title text. Default 1, \"black\". theta, phi Numeric scalar. angles defining viewing direction. theta gives azimuthal direction phi colatitude. Default 20 0. interactive Logical. Whether use \"rgl\" library create interactive device. Default FALSE.","code":""},{"path":"/reference/plotQuaternary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create quaternary simplex plots — plotQuaternary","text":"\"simMat\" method, \"plist\" (plot3D package product) object. methods, \"plist\" object splitCluster = FALSE, list \"plist\" objects splitCluster = TRUE. \"plist\" object can viewed print(), show() direct run object variable name interactive console.","code":""},{"path":"/reference/plotQuaternary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create quaternary simplex plots — plotQuaternary","text":"","code":"gene <- selectTopFeatures(rnaRaw, rnaCluster, c(\"RE\", \"OS\", \"CH\", \"ORT\")) #> Selected 30 features for \"CH\". #> Selected 30 features for \"ORT\". #> Selected 30 features for \"OS\". #> Selected 30 features for \"RE\". plotQuaternary(rnaRaw, rnaCluster, c(\"RE\", \"OS\", \"CH\", \"ORT\"), gene)  # \\donttest{ # Seurat example library(Seurat) srt <- CreateSeuratObject(rnaRaw) #> Warning: Feature names cannot have underscores ('_'), replacing with dashes ('-') Idents(srt) <- rnaCluster gene <- selectTopFeatures(srt, vertices = c(\"OS\", \"RE\", \"CH\", \"ORT\")) #> Selected 30 features for \"CH\". #> Selected 30 features for \"ORT\". #> Selected 30 features for \"OS\". #> Selected 30 features for \"RE\". plotQuaternary(srt, features = gene,                vertices = c(\"OS\", \"RE\", \"CH\", \"ORT\"))  # } # \\donttest{ # SingleCellExperiment example library(SingleCellExperiment) sce <- SingleCellExperiment(assays = list(counts = rnaRaw)) colLabels(sce) <- rnaCluster gene <- selectTopFeatures(sce, vertices = c(\"OS\", \"RE\", \"CH\", \"ORT\")) #> Selected 30 features for \"CH\". #> Selected 30 features for \"ORT\". #> Selected 30 features for \"OS\". #> Selected 30 features for \"RE\". plotQuaternary(sce, features = gene,                vertices = c(\"OS\", \"RE\", \"CH\", \"ORT\"))  # }"},{"path":"/reference/plotTernary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ternary plots — plotTernary","title":"Create ternary plots — plotTernary","text":"Create ternary plots show similarity single cells selected three terminals ternary baricentric coordinate.","code":""},{"path":"/reference/plotTernary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ternary plots — plotTernary","text":"","code":"plotTernary(x, ...)  # S3 method for default plotTernary(   x,   clusterVar,   vertices,   features = NULL,   veloGraph = NULL,   byCluster = NULL,   processed = FALSE,   method = c(\"euclidean\", \"cosine\", \"pearson\", \"spearman\"),   force = FALSE,   sigma = 0.08,   scale = TRUE,   dotColor = \"grey60\",   returnData = FALSE,   ... )  # S3 method for Seurat plotTernary(   x,   layer = \"counts\",   assay = NULL,   clusterVar = NULL,   processed = FALSE,   ... )  # S3 method for SingleCellExperiment plotTernary(   x,   assay.type = \"counts\",   clusterVar = NULL,   processed = FALSE,   ... )  # S3 method for simMat plotTernary(   x,   title = NULL,   veloMat = NULL,   nGrid = 10,   radius = 0.1,   dotSize = 0.6,   dotColor = \"grey60\",   labelColors = c(\"#3B4992FF\", \"#EE0000FF\", \"#008B45FF\"),   vertexLabelSize = 5,   vertexLabelDrift = 0.03,   axisBreak = 5,   axisTextShow = TRUE,   axisTextSize = 4,   axisTextDrift = 0.02,   gridLineAlpha = 0.6,   arrowLinewidth = 0.25,   arrowAngle = 20,   arrowLen = 0.2,   titleSize = 14,   equilateral = TRUE,   margin = 0.1,   ... )"},{"path":"/reference/plotTernary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ternary plots — plotTernary","text":"x Input data. Can matrix dgCMatrix object cells columns, Seurat SingleCellExperiment object. \"simMat\" method takes intermediate values. ... Arguments passed methods. clusterVar vector/factor assigning cluster variable column matrix object. \"Seurat\" method, NULL (default) Idents(x), variable name meta.data slot. \"SingleCellExperiment\" method, NULL (default) colLabels(x), variable name colData slot. vertices Vector three unique cluster names used plotting. named list groups clusters three terminal vertices. must overlap groups. features Valid matrix row subsetting index select features similarity calculation. Default NULL uses available features. veloGraph Cell x cell dgCMatrix object containing velocity information. Shows velocity grid-arrow layer specified. Default NULL show velocity. byCluster Default NULL generate one plot cells. Set \"\" split cells plot cluster returns list subplots cluster well plot including cells. Otherwise, vector cluster names generate list subplots specified clusters. processed Logical. Whether input matrix already processed. TRUE bypass internal preprocessing input matrix directly used similarity calculation. Default FALSE raw count input recommended. missing call, using slot = \"counts\" \"Seurat\" method using assay.type = \"counts\" \"SingleCellExperiment\" method force argument FALSE others TRUE. method Similarity calculation method. Default \"euclidean\". Choose \"euclidean\", \"cosine\", \"pearson\", \"spearman\". force Whether force calculate similarity 500 features detected, generally recommended. Default FALSE. sigma Gaussian kernel parameter controls effect variance. effective using distance metric (.e. method \"euclidian\" \"cosine\"). Larger values tighten dot spreading figure. Default 0.08. scale Whether min-max scale distance matrix clusters. Default TRUE. returnData Logical. Whether return similarity aggregated velocity data applicable instead generating plot. Default FALSE. layer \"Seurat\" method, layer assay used. Default \"counts\". assay \"Seurat\" method, specific assay get data . Default NULL default assay. assay.type \"SingleCellExperiment\" methods. assay use calculating similarity. Default \"counts\". title Title text plot. Default NULL. veloMat Aggregated velocity matrix. Output aggrVeloGraph. nGrid Number grids along bottom side equilateral triangle. Default 10. radius Arrow length unit velocity. Lower arrows point outside coordinate. Default 0.1. dotSize, dotColor Dot aesthetics passed geom_point. Default 0.6 \"grey60\". labelColors Colors axis lines vertex labels. Default c(\"#3B4992FF\", \"#EE0000FF\", \"#008B45FF\") (blue, red green) vertexLabelSize, vertexLabelDrift Adjustment three vertex text labels. Drift means distance labels moved center plot. Default size 5, drifted distance 0.03. axisBreak Number breaks labeled along axis. Default 5. axisTextShow Logical, whether show axis text. Default TRUE. axisTextSize, axisTextDrift Similar vertex adjustment applied text label along axis breaks. Default size 4, drifted distance 0.02. gridLineAlpha Transparency background grid lines. Default 0.6. arrowLinewidth, arrowAngle, arrowLen Arrow aesthetics, see Details. titleSize Size title text. Default 14. equilateral Logical, whether always display triangle equilateral. Default TRUE. margin Margin allowed around triangle plotting region equilateral = TRUE","code":""},{"path":"/reference/plotTernary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create ternary plots — plotTernary","text":"\"simMat\" method, ggplot object. methods, ggplot object splitCluster = FALSE, list ggplot objects splitCluster = TRUE.","code":""},{"path":"/reference/plotTernary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create ternary plots — plotTernary","text":"Argument inheritance - matrix/dgCMatrix (\"default\" method), first calculate similarity matrix obtain \"simMat\" object. \"simMat\" method internally called. data container objects (e.g. Seurat), obtain correct data matrix first call \"default\" method. arguments inherits flow described . calculation similarity matrix - similarity calculated either converting distance metric (\"euclidean\" \"cosine\") Gaussian kernel, directly computed correlation metrics (\"pearson\" \"spearman\"). centroid terminal obtained first, specified metric cell terminal calculated. similarity matrix (n cells v terminals) lastly normalized sum 1 cell, becomes baricentric coordinate. Arrow aesthetics parameters - shape arrows controlled 3 arguments. Considering arrow combination line segment triangle, arrowLinewidth controls width line well edge line triangle; arrowAngle equals angle arrow-tip vertex triangle devided 2 (e.g. triangle equilateral arrowAngle = 20); arrowLen controls absolute length arrow-tip vertex opposite edge.","code":""},{"path":"/reference/plotTernary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create ternary plots — plotTernary","text":"","code":"gene <- selectTopFeatures(rnaRaw, rnaCluster, c(\"OS\", \"RE\", \"CH\")) #> Selected 30 features for \"CH\". #> Selected 30 features for \"OS\". #> Selected 30 features for \"RE\". plotTernary(rnaRaw, rnaCluster, c(\"OS\", \"RE\", \"CH\"), gene)  # \\donttest{ # Seurat example library(Seurat) srt <- CreateSeuratObject(rnaRaw) #> Warning: Feature names cannot have underscores ('_'), replacing with dashes ('-') Idents(srt) <- rnaCluster gene <- selectTopFeatures(srt, vertices = c(\"OS\", \"RE\", \"CH\")) #> Selected 30 features for \"CH\". #> Selected 30 features for \"OS\". #> Selected 30 features for \"RE\". plotTernary(srt, features = gene, vertices = c(\"OS\", \"RE\", \"CH\"))  # } # \\donttest{ # SingleCellExperiment example library(SingleCellExperiment) sce <- SingleCellExperiment(assays = list(counts = rnaRaw)) colLabels(sce) <- rnaCluster gene <- selectTopFeatures(sce, vertices = c(\"OS\", \"RE\", \"CH\")) #> Selected 30 features for \"CH\". #> Selected 30 features for \"OS\". #> Selected 30 features for \"RE\". plotTernary(sce, features = gene, vertices = c(\"OS\", \"RE\", \"CH\"))  # }"},{"path":"/reference/rnaCluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Major cell type annotation of the example mouse bone marrow data — rnaCluster","title":"Major cell type annotation of the example mouse bone marrow data — rnaCluster","text":"Major cell type annotation example mouse bone marrow data","code":""},{"path":"/reference/rnaCluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Major cell type annotation of the example mouse bone marrow data — rnaCluster","text":"","code":"rnaCluster"},{"path":"/reference/rnaCluster.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Major cell type annotation of the example mouse bone marrow data — rnaCluster","text":"factor object","code":""},{"path":"/reference/rnaCluster.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Major cell type annotation of the example mouse bone marrow data — rnaCluster","text":"https://www.nature.com/articles/s41467-023-38034-2","code":""},{"path":"/reference/rnaCluster.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Major cell type annotation of the example mouse bone marrow data — rnaCluster","text":"Matsushita, Y., Liu, J., Chu, .K.Y. et al. Bone marrow endosteal stem cells dictate active osteogenesis aggressive tumorigenesis. Nat Commun 14, 2383 (2023).","code":""},{"path":"/reference/rnaRaw.html","id":null,"dir":"Reference","previous_headings":"","what":"Mouse bone marrow scRNAseq example data — rnaRaw","title":"Mouse bone marrow scRNAseq example data — rnaRaw","text":"Mouse bone marrow scRNAseq example data","code":""},{"path":"/reference/rnaRaw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mouse bone marrow scRNAseq example data — rnaRaw","text":"","code":"rnaRaw"},{"path":"/reference/rnaRaw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mouse bone marrow scRNAseq example data — rnaRaw","text":"dgCMatrix object","code":""},{"path":"/reference/rnaRaw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mouse bone marrow scRNAseq example data — rnaRaw","text":"https://www.nature.com/articles/s41467-023-38034-2","code":""},{"path":"/reference/rnaRaw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mouse bone marrow scRNAseq example data — rnaRaw","text":"Matsushita, Y., Liu, J., Chu, .K.Y. et al. Bone marrow endosteal stem cells dictate active osteogenesis aggressive tumorigenesis. Nat Commun 14, 2383 (2023).","code":""},{"path":"/reference/rnaVelo.html","id":null,"dir":"Reference","previous_headings":"","what":"Velocity graph of the example mouse bone marrow data — rnaVelo","title":"Velocity graph of the example mouse bone marrow data — rnaVelo","text":"Velocity graph example mouse bone marrow data","code":""},{"path":"/reference/rnaVelo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Velocity graph of the example mouse bone marrow data — rnaVelo","text":"","code":"rnaVelo"},{"path":"/reference/rnaVelo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Velocity graph of the example mouse bone marrow data — rnaVelo","text":"dgCMatrix object","code":""},{"path":"/reference/rnaVelo.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Velocity graph of the example mouse bone marrow data — rnaVelo","text":"https://www.nature.com/articles/s41467-023-38034-2","code":""},{"path":"/reference/rnaVelo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Velocity graph of the example mouse bone marrow data — rnaVelo","text":"Matsushita, Y., Liu, J., Chu, .K.Y. et al. Bone marrow endosteal stem cells dictate active osteogenesis aggressive tumorigenesis. Nat Commun 14, 2383 (2023).","code":""},{"path":"/reference/selectTopFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Pick top differentially presented features for similarity calculation — selectTopFeatures","title":"Pick top differentially presented features for similarity calculation — selectTopFeatures","text":"Performs wilcoxon rank-sum test input matrix. clusterVar vertices together defines groups cells set terminals simplex, function test groups rest cells. U-Statistics (statistic), p-value (pval) adjusted p-value (padj), together average presence group (avgExpr), log fold-change (logFC), AUC (auc), percentage group (pct_in) percentage group (pct_out) calculated. Set returnStats = TRUE return full statistics table. Top features selected sorting primarily adjusted p-value, secondarily log fold-change, filtering -regulated features.","code":""},{"path":"/reference/selectTopFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pick top differentially presented features for similarity calculation — selectTopFeatures","text":"","code":"selectTopFeatures(x, clusterVar, vertices, ...)  # S3 method for default selectTopFeatures(   x,   clusterVar,   vertices,   nTop = 30,   processed = FALSE,   lfcThresh = 0.1,   returnStats = FALSE,   ... )  # S3 method for Seurat selectTopFeatures(   x,   clusterVar = NULL,   vertices,   assay = NULL,   layer = \"counts\",   processed = FALSE,   ... )  # S3 method for SingleCellExperiment selectTopFeatures(   x,   clusterVar = NULL,   vertices,   assay.type = \"counts\",   processed = FALSE,   ... )"},{"path":"/reference/selectTopFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pick top differentially presented features for similarity calculation — selectTopFeatures","text":"x Dense sparse matrix, observation per column. Preferrably raw count matrix. Alternatively, Seurat object SingleCellExperiment object. clusterVar vector/factor assigning cluster variable column matrix object. \"Seurat\" method, NULL (default) Idents(x), variable name meta.data slot. \"SingleCellExperiment\" method, NULL (default) colLabels(x), variable name colData slot. vertices Vector cluster names used plotting. named list groups clusters terminal vertex. must overlap groups. ... Arguments passed methods. nTop Number top differentially presented features per terminal. Default 30. processed Logical. Whether input matrix already processed. TRUE bypass internal preprocessing input matrix directly used rank-sum calculation. Default FALSE raw count input recommended. lfcThresh Threshold log fold-change identify -regulated features. Default 0.1. returnStats Logical. Whether return full statistics table rather returning selected genes. Default FALSE assay Assay name Seurat object used. Default NULL. layer \"Seurat\" method, layer assay used. Default \"counts\". assay.type Assay name SingleCellExperiment object used. Default \"counts\".","code":""},{"path":"/reference/selectTopFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pick top differentially presented features for similarity calculation — selectTopFeatures","text":"returnStats = FALSE (default), character vector length(unique(vertices))*nTop feature names. returnStats = TRUE, data.frame wilcoxon rank sum test statistics.","code":""},{"path":"/reference/selectTopFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pick top differentially presented features for similarity calculation — selectTopFeatures","text":"","code":"selectTopFeatures(rnaRaw, rnaCluster, c(\"OS\", \"RE\")) #> Selected 30 features for \"OS\". #> Selected 30 features for \"RE\". #>  [1] \"Insc\"          \"Pacsin1\"       \"Pcdh7\"         \"Lipc\"          #>  [5] \"Col1a2\"        \"Col1a1\"        \"Col22a1\"       \"Cpz\"           #>  [9] \"Slc36a2\"       \"Cdo1\"          \"Kcnk1\"         \"Ano1\"          #> [13] \"Mlip\"          \"Col13a1\"       \"Robo2\"         \"Cadm1\"         #> [17] \"Ifitm5\"        \"Tmem119\"       \"Serpinf1\"      \"Sema3b\"        #> [21] \"Col24a1\"       \"Shc2\"          \"Kazald1\"       \"Entpd3\"        #> [25] \"RP23-457J22.1\" \"Enpp6\"         \"Creb3l3\"       \"Wisp1\"         #> [29] \"Elmo1\"         \"Mmp16\"         \"Agt\"           \"Rarres2\"       #> [33] \"Kng1\"          \"Mgst1\"         \"Cxcl14\"        \"Plpp3\"         #> [37] \"Adipoq\"        \"Kitl\"          \"Gpm6b\"         \"Wisp2\"         #> [41] \"Vcam1\"         \"Serping1\"      \"Lpl\"           \"Vegfc\"         #> [45] \"Col4a2\"        \"Col4a1\"        \"Kng2\"          \"Fbn1\"          #> [49] \"Pdgfrb\"        \"Grem1\"         \"Cxcl12\"        \"Cyp1b1\"        #> [53] \"Dpep1\"         \"Fbln5\"         \"Lepr\"          \"Igfbp5\"        #> [57] \"Hp\"            \"Fstl1\"         \"Esm1\"          \"Tgfbr3\"        # \\donttest{ # Seurat example library(Seurat) srt <- CreateSeuratObject(rnaRaw) #> Warning: Feature names cannot have underscores ('_'), replacing with dashes ('-') Idents(srt) <- rnaCluster gene <- selectTopFeatures(srt, vertices = c(\"OS\", \"RE\")) #> Selected 30 features for \"OS\". #> Selected 30 features for \"RE\". # } # \\donttest{ # SingleCellExperiment example library(SingleCellExperiment) sce <- SingleCellExperiment(assays = list(counts = rnaRaw)) colLabels(sce) <- rnaCluster gene <- selectTopFeatures(sce, vertices = c(\"OS\", \"RE\")) #> Selected 30 features for \"OS\". #> Selected 30 features for \"RE\". # }"},{"path":"/reference/show-plist.html","id":null,"dir":"Reference","previous_headings":"","what":"Show plist object produced with plot3D package — show,plist-method","title":"Show plist object produced with plot3D package — show,plist-method","text":"Show plist object produced plot3D package","code":""},{"path":"/reference/show-plist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show plist object produced with plot3D package — show,plist-method","text":"","code":"# S4 method for plist show(object)  # S3 method for plist print(x, ...)"},{"path":"/reference/show-plist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show plist object produced with plot3D package — show,plist-method","text":"object, x plist object ... Graphic parameters passed plot. mar pre-specified.","code":""},{"path":"/reference/show-plist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show plist object produced with plot3D package — show,plist-method","text":"return value. displays plot described 'plist' object returned plotQuaternary, internally created package 'plot3D'.","code":""},{"path":"/reference/show-plist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show plist object produced with plot3D package — show,plist-method","text":"","code":"gene <- selectTopFeatures(rnaRaw, rnaCluster, c(\"RE\", \"OS\", \"CH\", \"ORT\")) #> Selected 30 features for \"CH\". #> Selected 30 features for \"ORT\". #> Selected 30 features for \"OS\". #> Selected 30 features for \"RE\". plistObj <- plotQuaternary(rnaRaw, rnaCluster, c(\"RE\", \"OS\", \"CH\", \"ORT\"), gene) print(plistObj)  # equivalent to show(plistObj)"},{"path":"/reference/writeQuaternaryGIF.html","id":null,"dir":"Reference","previous_headings":"","what":"Create GIF image for dynamic rotating view of 3D quaternary simplex plot — writeQuaternaryGIF","title":"Create GIF image for dynamic rotating view of 3D quaternary simplex plot — writeQuaternaryGIF","text":"Create GIF image dynamic rotating view 3D quaternary simplex plot","code":""},{"path":"/reference/writeQuaternaryGIF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create GIF image for dynamic rotating view of 3D quaternary simplex plot — writeQuaternaryGIF","text":"","code":"writeQuaternaryGIF(   x,   ...,   cluster = NULL,   gifPath = \"quaternary.gif\",   tmpDir = tempdir(),   fps = 10,   degreePerFrame = 10 )"},{"path":"/reference/writeQuaternaryGIF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create GIF image for dynamic rotating view of 3D quaternary simplex plot — writeQuaternaryGIF","text":"x Input object plotQuaternary accepts. ... arguments needed plotQuaternary. Must specified exact argument names instead positional manner. cluster One cluster exists clusterVar, users need view plot specific group. Default NULL plot cells. gifPath Output GIF image file path. Default \"quaternary.gif\" tmpDir temprorary directory store PNG files perspectives created. Default tempdir(). fps Number frame per second, must factor 100. Default 10. degreePerFrame Number degree tetrahedron rotated per frame. Default 10.","code":""},{"path":"/reference/writeQuaternaryGIF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create GIF image for dynamic rotating view of 3D quaternary simplex plot — writeQuaternaryGIF","text":"object returned. tmpDir folder created 360 / degreePerFrame PNG image files . GIF image file created gifPath.","code":""},{"path":"/reference/writeQuaternaryGIF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create GIF image for dynamic rotating view of 3D quaternary simplex plot — writeQuaternaryGIF","text":"","code":"gene <- selectTopFeatures(rnaRaw, rnaCluster, c(\"RE\", \"OS\", \"CH\", \"ORT\")) #> Selected 30 features for \"CH\". #> Selected 30 features for \"ORT\". #> Selected 30 features for \"OS\". #> Selected 30 features for \"RE\". # \\donttest{ writeQuaternaryGIF(rnaRaw, clusterVar = rnaCluster, features = gene,                    vertices = c(\"RE\", \"OS\", \"CH\", \"ORT\"),                    gifPath = paste0(tempfile(), \".gif\")) #> Generating quanternary simplex plots... #>    |                                                                               |                                                                      |   0% #>    |                                                                               |==                                                                    |   3% #>    |                                                                               |====                                                                  |   6% #>    |                                                                               |======                                                                |   8% #>    |                                                                               |========                                                              |  11% #>    |                                                                               |==========                                                            |  14% #>    |                                                                               |============                                                          |  17% #>    |                                                                               |==============                                                        |  19% #>    |                                                                               |================                                                      |  22% #>    |                                                                               |==================                                                    |  25% #>    |                                                                               |===================                                                   |  28% #>    |                                                                               |=====================                                                 |  31% #>    |                                                                               |=======================                                               |  33% #>    |                                                                               |=========================                                             |  36% #>    |                                                                               |===========================                                           |  39% #>    |                                                                               |=============================                                         |  42% #>    |                                                                               |===============================                                       |  44% #>    |                                                                               |=================================                                     |  47% #>    |                                                                               |===================================                                   |  50% #>    |                                                                               |=====================================                                 |  53% #>    |                                                                               |=======================================                               |  56% #>    |                                                                               |=========================================                             |  58% #>    |                                                                               |===========================================                           |  61% #>    |                                                                               |=============================================                         |  64% #>    |                                                                               |===============================================                       |  67% #>    |                                                                               |=================================================                     |  69% #>    |                                                                               |===================================================                   |  72% #>    |                                                                               |====================================================                  |  75% #>    |                                                                               |======================================================                |  78% #>    |                                                                               |========================================================              |  81% #>    |                                                                               |==========================================================            |  83% #>    |                                                                               |============================================================          |  86% #>    |                                                                               |==============================================================        |  89% #>    |                                                                               |================================================================      |  92% #>    |                                                                               |==================================================================    |  94% #>    |                                                                               |====================================================================  |  97% #>    |                                                                               |======================================================================| 100% #> Generated the GIF: /var/folders/k9/nwtr_c_57kd43cmbtz82ywlr0000gn/T//RtmpWZuBmm/file181a8445c6b16.gif # }"},{"path":"/news/index.html","id":"cytosimplex-010","dir":"Changelog","previous_headings":"","what":"CytoSimplex 0.1.0","title":"CytoSimplex 0.1.0","text":"CRAN release: 2023-12-13 Initial release version.","code":""}]
